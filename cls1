#!/usr/bin/env python3

"""This is the main script for Conservation law problems in one space dimension.

For setting up parameters use the file `defauls.py` or options via command prompt.
More information are available with "cls1 --help".

"""

from typing import Dict
import profiler
from pprint import pp
from command import PARSER_COMMANDS

from parser import CustomArgumentParser


def print_arguments(arguments):
    if arguments.args:
        print("ARGUMENTS:")
        print("----------")
        pp(_get_deep_dict(vars(arguments)))
        print("")
        print("COMMAND OUTPUT")
        print("--------------")

    del arguments.args


def _get_deep_dict(dictionary: Dict):
    new_dict = {}
    for key, value in dictionary.items():
        if hasattr(value, "as_dict") and callable(getattr(value, "as_dict")):
            value_as_dict = _get_deep_dict(value.as_dict())
            new_dict[key] = value_as_dict

        elif isinstance(value, list):
            new_list = []

            for x in value:
                if hasattr(x, "as_dict") and callable(getattr(x, "as_dict")):
                    new_list.append(_get_deep_dict(x.as_dict()))
                else:
                    new_list.append(x)

            new_dict[key] = new_list

        else:
            new_dict[key] = value

    return new_dict


def print_profile(arguments):
    if "profile" in arguments:
        profiler.PRINT_PROFILE = arguments.profile
        del arguments.profile


def execute_command(arguments):
    command = arguments.command
    del arguments.command

    command(**vars(arguments)).execute()


@profiler.profile
def main():
    parser = CustomArgumentParser(PARSER_COMMANDS)
    arguments = parser.parse_arguments()

    print_arguments(arguments)
    print_profile(arguments)
    execute_command(arguments)


if __name__ == "__main__":
    main()
